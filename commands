 check the deployment status==>
kubectl get deployments

 check the pods status==>
kubectl get pods

check the deployment flow==>
kubectl describe deployment deployment

check the logs==>
kubectl logs pod name

inside the pod==>
kubectl exec -it pod name -- sh

image update in the pod==>
kubectl rolling-update <pod_name> --image=<new_image>

docker images path==>
docker inspect --format='{{.GraphDriver.Data.MergedDir}}' <image-name>

port forwording==>
kubectl port-forward service/my-service 3001:80

get endpoint==>
kubectl get endpoints

dscribe servcie==>
kubectl describe service/my-service

check the cluster name==>
kubectl config current-context
kubectl config get-contexts minikube
minikube ip -p minikube
==>http://192.168.49.2:30080/ping


inside the pods==>
kubectl exec -it <pod-name> -- sh

health check==>
wget http://localhost:3000/health

access shell and check the docker images
minikube ssh
docker images

image push in docker deamon==>
minikube image load lab-image

-----------------------------
prometheous installation==>
-----------------------------
sudo apt update
wget https://github.com/prometheus/prometheus/releases/download/v2.33.1/prometheus-2.33.1.linux-amd64.tar.gz
tar xvf prometheus-*.tar.gz
sudo nano /opt/prometheus/prometheus.yml


start the prometheous==>
/opt/prometheus/prometheus --config.file=/opt/prometheus/prometheus.yml

create the service==>
sudo nano /etc/systemd/system/prometheus.service

enable the service and start Prometheus:

sudo systemctl daemon-reload
sudo systemctl enable prometheus
sudo systemctl start prometheus

metrics server enable==>
minikube addons enable metrics-server

hpa
kubectl autoscale deployment testweb-app1 --cpu-percent=20 --min=1 --max=10

inside the pods==>
kubectl exec -it testweb-app1-869769f867-gq297 -- sh

